<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:bioc="http://bpmn.io/schema/bpmn/biocolor/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:camunda="http://camunda.org/schema/1.0/bpmn" id="Definitions_1t06bdh" targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="2.0.3">
  <bpmn:collaboration id="Collaboration_1p945p5">
    <bpmn:participant id="WeitereAngabenErfassenParticipant" name="Weitere Angaben erfassen" processRef="WeitereAngabenErfassen" />
    <bpmn:participant id="VeKaCenterAuskunftsdienstParticipant" name="VeKa-Center-Auskunftsdienst" />
    <bpmn:messageFlow id="VersichertenDaten" name="Versicherten-Daten&#10;" sourceRef="GrundversicherungPruefen" targetRef="VeKaCenterAuskunftsdienstParticipant">
      <bpmn:documentation>baseInsuranceNumber, firstName, officialName, dateOfBirth</bpmn:documentation>
    </bpmn:messageFlow>
    <bpmn:messageFlow id="Pruefergebnis" name="Prüfergebnis" sourceRef="VeKaCenterAuskunftsdienstParticipant" targetRef="GrundversicherungPruefen">
      <bpmn:documentation>checkBaseInsuranceResult und checkBaseInsuranceResultDetails</bpmn:documentation>
    </bpmn:messageFlow>
  </bpmn:collaboration>
  <bpmn:process id="WeitereAngabenErfassen" name="WeitereAngabenErfassen" isExecutable="true">
    <bpmn:sequenceFlow id="Umzug" name="Umzug" sourceRef="ExclusiveGateway_0nvmazi" targetRef="ExclusiveGateway_0hwy0a5">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${municipalityIdMoveOut == municipalityIdMoveIn}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="WegzugZuzug" name="Wegzug/&#10;Zuzug&#10;" sourceRef="ExclusiveGateway_0nvmazi" targetRef="GrundversicherungFuerAllePersonenPruefen">
      <bpmn:documentation>Die Grundversicherung ist nur zu prüfen, wenn es sich um einen Zuzug-Wegzug handelt</bpmn:documentation>
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${municipalityIdMoveOut != municipalityIdMoveIn}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:subProcess id="GrundversicherungFuerAllePersonenPruefen" name="Grundversicherung für alle Personen prüfen">
      <bpmn:documentation>Für jede umziehende Person (personList.persons) muss über den VeKa-Center-Auskunftsdienst geprüft werden, ob sie über eine Krankengrundversicherung verfügt.

Dies geschieht in diesem sequentiellen Multi-Instanz-Subprozess. Für die Anzahl Elemente in personList.persons wird dieser Subprozess durchgeführt, wobei im Hintergrund von Camunda automatisch die loopCounter-Variable gesetzt wird, welche dem Index in personList.persons entspricht. Es handelt sich also um das BPMN-Äquivalent zu einer klassischen for-Schleife.

PS: Der elegantere Weg über ${personList.persons} als Collection und person als Element Variable (for-each-Schleife) klappt leider nicht, weil die Collection als Value statt reference übergeben wird. Auf diese Weise werden veränderte person-Objekte nicht in personList.persons aktualisiert.</bpmn:documentation>
      <bpmn:incoming>WegzugZuzug</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_0431ehk</bpmn:outgoing>
      <bpmn:multiInstanceLoopCharacteristics isSequential="true">
        <bpmn:loopCardinality xsi:type="bpmn:tFormalExpression">${personList.persons.size()}</bpmn:loopCardinality>
      </bpmn:multiInstanceLoopCharacteristics>
      <bpmn:startEvent id="GrundversicherungPruefenStartEvent">
        <bpmn:documentation>In einem End Listener wird die Prozessvariable checkBaseInsurance auf true gesetzt. 

Diese Variable wird benötigt, um zu steuern, ob nach dem Erfassen der Versicherungskartennummer diese geprüft werden soll (im ersten Durchgang immer) oder ob die Prüfung übersprungen werden soll (im zweiten Durchgang, falls der Benutzer keine andere Nummer eingibt).</bpmn:documentation>
        <bpmn:extensionElements>
          <camunda:executionListener event="end">
            <camunda:script scriptFormat="JavaScript">execution.setVariable("checkBaseInsurance", true);</camunda:script>
          </camunda:executionListener>
        </bpmn:extensionElements>
        <bpmn:outgoing>SequenceFlow_0pt3tuk</bpmn:outgoing>
      </bpmn:startEvent>
      <bpmn:exclusiveGateway id="ExclusiveGateway_0hkwozz" name="Prüfen?">
        <bpmn:incoming>SequenceFlow_13c4q3d</bpmn:incoming>
        <bpmn:outgoing>PruefenJa</bpmn:outgoing>
        <bpmn:outgoing>PruefenNein</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:exclusiveGateway id="ExclusiveGateway_1k9fmii">
        <bpmn:incoming>PruefenNein</bpmn:incoming>
        <bpmn:incoming>SequenceFlow_0unz7dw</bpmn:incoming>
        <bpmn:outgoing>SequenceFlow_1r2heig</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:exclusiveGateway id="ExclusiveGateway_0u7sxyf">
        <bpmn:incoming>SequenceFlow_104azdr</bpmn:incoming>
        <bpmn:incoming>SequenceFlow_0pt3tuk</bpmn:incoming>
        <bpmn:outgoing>SequenceFlow_14qf1vf</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:exclusiveGateway id="ExclusiveGateway_0vwu5q9" name="Prüfergebnis?">
        <bpmn:incoming>SequenceFlow_1pfbest</bpmn:incoming>
        <bpmn:outgoing>SequenceFlow_0unz7dw</bpmn:outgoing>
        <bpmn:outgoing>SequenceFlow_104azdr</bpmn:outgoing>
      </bpmn:exclusiveGateway>
      <bpmn:sequenceFlow id="SequenceFlow_13c4q3d" sourceRef="VersicherungsKartennummernErfassen" targetRef="ExclusiveGateway_0hkwozz" />
      <bpmn:sequenceFlow id="PruefenJa" name="ja" sourceRef="ExclusiveGateway_0hkwozz" targetRef="GrundversicherungPruefen">
        <bpmn:documentation>Im Normalfall soll die Prüfung durchgeführt werden.</bpmn:documentation>
        <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${checkBaseInsurance}</bpmn:conditionExpression>
      </bpmn:sequenceFlow>
      <bpmn:sequenceFlow id="PruefenNein" name="nein" sourceRef="ExclusiveGateway_0hkwozz" targetRef="ExclusiveGateway_1k9fmii">
        <bpmn:documentation>Wenn checkBaseInsurance im UserTask auf falsch gesetzt wurde, dann soll die Prüfung übersprungen werden. Das ist der Fall, wenn der Benutzer dieselbe Nummer beim zweiten Durchlauf eingegeben hat.</bpmn:documentation>
        <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${!checkBaseInsurance}</bpmn:conditionExpression>
      </bpmn:sequenceFlow>
      <bpmn:sequenceFlow id="SequenceFlow_0unz7dw" name="positiv" sourceRef="ExclusiveGateway_0vwu5q9" targetRef="ExclusiveGateway_1k9fmii">
        <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${personList.persons.get(loopCounter).checkBaseInsuranceResult == "Yes"}</bpmn:conditionExpression>
      </bpmn:sequenceFlow>
      <bpmn:sequenceFlow id="SequenceFlow_104azdr" name="negativ" sourceRef="ExclusiveGateway_0vwu5q9" targetRef="ExclusiveGateway_0u7sxyf">
        <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${personList.persons.get(loopCounter).checkBaseInsuranceResult != "Yes"}</bpmn:conditionExpression>
      </bpmn:sequenceFlow>
      <bpmn:sequenceFlow id="SequenceFlow_14qf1vf" sourceRef="ExclusiveGateway_0u7sxyf" targetRef="VersicherungsKartennummernErfassen" />
      <bpmn:sequenceFlow id="SequenceFlow_1pfbest" sourceRef="GrundversicherungPruefen" targetRef="ExclusiveGateway_0vwu5q9" />
      <bpmn:sequenceFlow id="SequenceFlow_0pt3tuk" sourceRef="GrundversicherungPruefenStartEvent" targetRef="ExclusiveGateway_0u7sxyf" />
      <bpmn:endEvent id="EndEvent_13l92vz">
        <bpmn:incoming>SequenceFlow_1r2heig</bpmn:incoming>
      </bpmn:endEvent>
      <bpmn:sequenceFlow id="SequenceFlow_1r2heig" sourceRef="ExclusiveGateway_1k9fmii" targetRef="EndEvent_13l92vz" />
      <bpmn:userTask id="VersicherungsKartennummernErfassen" name="Versicherungs-Kartennummern erfassen" camunda:formKey="embedded:app:forms/VersicherungsKartennummernErfassen.html" camunda:assignee="${meldePflichtiger}">
        <bpmn:documentation>Folgenden Warning-Alert anzeigen, falls die Antwort des VeKa-Center-Auskunftsdienstes (checkBaseInsuranceResult) 'No' oder 'Unknown' ist.
"Die Grundversicherungspflicht für diese Person konnte nicht erfolgreich geprüft werden. Details:   

{{person.checkBaseInsuranceResultDetails}}       

Prüfen Sie bitte nochmals, ob Sie die Nummer richtig erfasst haben.        

Falls Sie korrekt ist, können Sie dieses Formular ohne Änderung erneut absenden. Der Prozess kann dennoch fortgesetzt werden, aber vermutlich müssen Sie auf der Zuzugsgemeinde persönlich vorbei gehen mit Ihrer Versichertenkarte        

Falls Sie die Nummer falsch erfasst haben, geben Sie nun die korrekte Nummer ein und die Prüfung erfolgt dann erneut.


Formularfeld:
- label: Versichertenkartennummer für VORNAME NACHNAME*
- typ number
- Wert: baseInsuranceNumber
- Pflicht-Attribut

Skripte:
- Nach dem Formular-Laden sollen die Variablen checkBaseInsurance, personList und loopCounter ausgelesen werden
- Nach dem Auslesen soll die aktuelle Person (gemäss loopCounter) $scope.person zugewiesen werden. Zudem sind die Variablen $scope.baseInsuranceNumberOriginal und $scope.baseInsuranceNumber entsprechend aus $scope.person.baseInsuranceNumber auszulesen
- Vor dem Absenden des Formulars ist zu prüfen, ob der Benutzer die baseInsuranceNumber geändert hat. Falls checkBaseInsurance falsch ist und der Benutzer etwas geändert hat, ist checkBaseInsurance auf Wahr zu setzen.</bpmn:documentation>
        <bpmn:incoming>SequenceFlow_14qf1vf</bpmn:incoming>
        <bpmn:outgoing>SequenceFlow_13c4q3d</bpmn:outgoing>
      </bpmn:userTask>
      <bpmn:serviceTask id="GrundversicherungPruefen" name="Grund-versicherung prüfen" camunda:delegateExpression="#{checkBaseInsuranceAdapter}">
        <bpmn:documentation>Grundversicherungsprüfung pro umziehender Person im Auskunftsdienst des VeKa-Centers

Aufgrund der Komplexität soll die eigentliche Prüfung in einem ausgelagerten Service stattfinden (CheckBaseInsuranceService), dessen Anforderungen gleich anschliessend beschrieben sind. In der Delegate-Klasse soll lediglich die aktuelle Person in der Multi-Instanz-Aktivität ermittelt werden und diese an den CheckBaseInsuranceService übergeben werden, um dort geprüft zu werden.

Im CheckBaseInsuranceService soll es eine Methode geben, welche folgende Anforderungen erfüllt:
- Sie nimmt ein Person-Objekt entgegen
- Sie ruft eine Methode getVeKaCard in einem ausgelagerten VeKaClientService auf und übergibt dieser die Grundversicherungskartennummer. Die  Methode getVeKaCard wiederum ruft über eine GET-Anfrage an die VeKa-REST-API die zugehörige card-Resource ab. Ist diese vorhanden wird sie an die CheckBaseInsuranceService-Methode zurück gegeben, ansonsten wird null zurück gegeben, respektive ein Fehler geworfen, wenn weder 404 noch 200 von der VeKa-API als Antwort kommen.
- Falls zur Kartennummer keine Karte gefunden wurde, dann soll die checkBaseInsuranceResult-Eigenschaft der Person auf "Unknown" gesetzt werden und die checkBaseInsuranceResultDetails-Eigenschaft auf "Keine Karte zu dieser Nummer gefunden. Mögliche Gründe: (Un)bewusste Falscheingabe oder der Kartenaussteller ist nicht bei der VeKa registriert."
- Falls die Karte abgelaufen ist, ist checkBaseInsuranceResult "No" und checkBaseInsuranceResultDetails "Karte abgelaufen".
- Falls die Karte nicht zur übergebenen Person passt, also entweder Vorname, Geburtsdatum und/oder Nachname abweichend sind, ist checkBaseInsuranceResult "No" und checkBaseInsuranceResultDetails "Karte gültig, aber Personalien nicht passend (ABWEICHENDE_PERSONALIEN)", wobei ABWEICHENDE_PERSONALIEN eine kommagetrennte Liste der betroffenen Personalien enthält, also im Maximum "Geburtsdatum, Vorname, Nachname).
- Falls die obigen Punkte nicht zutreffen, dann ist checkBaseInsuranceResult "Yes" und entsprechend sind auch keine checkBaseInsuranceResultDetails erforderlich.

In einem End Listener wird die Variable checkBaseInsurance auf false gesetzt. Begründung siehe im Kommentar zum GrundversicherungPruefenStartEvent.</bpmn:documentation>
        <bpmn:extensionElements>
          <camunda:executionListener event="end">
            <camunda:script scriptFormat="JavaScript">execution.setVariable("checkBaseInsurance", false);</camunda:script>
          </camunda:executionListener>
        </bpmn:extensionElements>
        <bpmn:incoming>PruefenJa</bpmn:incoming>
        <bpmn:outgoing>SequenceFlow_1pfbest</bpmn:outgoing>
      </bpmn:serviceTask>
    </bpmn:subProcess>
    <bpmn:endEvent id="WeitereAngabenErfolgreichErfasst" name="Weitere Angaben erfolgreich erfasst">
      <bpmn:incoming>SequenceFlow_1hy3e56</bpmn:incoming>
    </bpmn:endEvent>
    <bpmn:exclusiveGateway id="ExclusiveGateway_0hwy0a5">
      <bpmn:incoming>Umzug</bpmn:incoming>
      <bpmn:incoming>SequenceFlow_0431ehk</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1pmjdyn</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:sequenceFlow id="SequenceFlow_1hy3e56" sourceRef="KontaktangabenErfassen" targetRef="WeitereAngabenErfolgreichErfasst" />
    <bpmn:sequenceFlow id="SequenceFlow_1pmjdyn" sourceRef="ExclusiveGateway_0hwy0a5" targetRef="KontaktangabenErfassen" />
    <bpmn:sequenceFlow id="SequenceFlow_0431ehk" sourceRef="GrundversicherungFuerAllePersonenPruefen" targetRef="ExclusiveGateway_0hwy0a5" />
    <bpmn:startEvent id="ZuzugsInformationenErfolgreichGeprueft" name="Zuzugs-Informationen erfolgreich geprüft">
      <bpmn:documentation>Dieses Prozesstartereignis wird aufgerufen vom Prozess 'Umzugsmeldung erfassen und bezahlen' und ist nicht gedacht, um unabhängig davon (z.B. aus der Tasklist) aufgerufen zu werden.</bpmn:documentation>
      <bpmn:outgoing>SequenceFlow_1j0inpb</bpmn:outgoing>
    </bpmn:startEvent>
    <bpmn:exclusiveGateway id="ExclusiveGateway_0nvmazi" name="Umzugsart?">
      <bpmn:incoming>SequenceFlow_0gaq5kd</bpmn:incoming>
      <bpmn:outgoing>WegzugZuzug</bpmn:outgoing>
      <bpmn:outgoing>Umzug</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:sequenceFlow id="SequenceFlow_1j0inpb" sourceRef="ZuzugsInformationenErfolgreichGeprueft" targetRef="UmzugsdatenErfassen" />
    <bpmn:sequenceFlow id="SequenceFlow_04fd0dv" sourceRef="UmzugsdatenErfassen" targetRef="WohnverhaeltnisErfassen" />
    <bpmn:sequenceFlow id="SequenceFlow_0gaq5kd" sourceRef="WohnverhaeltnisErfassen" targetRef="ExclusiveGateway_0nvmazi" />
    <bpmn:userTask id="WohnverhaeltnisErfassen" name="Wohnverhältnis erfassen" camunda:formKey="embedded:app:forms/WohnverhaeltnisErfassenForm.html" camunda:assignee="${meldePflichtiger}">
      <bpmn:documentation>Wohnverhältnis
  eCH-0185:housingSituationType
 Integer
  select (1=Eigentümer, 2=Mieter, 3=Untermieter, Pflicht)

Panel "Angaben zum Vermieter" mit folgenden Feldern soll nur angezeigt werden, wenn housingSituationType={2,3}:

Vorname Nachname oder Firmenname  (Achtung bei diesen und weiteren Attributen, die es sowohl bei Wegzug als auch Zuzug gibt und beim Wohnverhältnis: Es wurde an die eCH-Bezeichnung jeweils noch HousingSituation angehängt)
  eCH-0185:nameHousingSituation
  String
  input text (max. 100 Zeichen, Pflicht)

Strasse
  eCH-0010:streetHousingSituation
  String
  input text (max. 60 Zeichen, Pflicht)
Hausnummer (optional)
  eCH-0010:houseNumberHousingSituation
  String
  input text (max. 12 Zeichen)
PLZ
  eCH-0010:swissZipCodeHousingSituation
  Integer
  input number (0-9999, Pflicht)
Ort
  eCH-0010:townHousingSituation
  String
  input text (max. 40 Zeichen, Pflicht)</bpmn:documentation>
      <bpmn:incoming>SequenceFlow_04fd0dv</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_0gaq5kd</bpmn:outgoing>
    </bpmn:userTask>
    <bpmn:userTask id="KontaktangabenErfassen" name="Kontaktangaben erfassen" camunda:formKey="embedded:app:forms/KontaktangabenErfassenForm.html" camunda:assignee="${meldePflichtiger}">
      <bpmn:documentation>Telefonnummer
  eCH-0185:phoneNumber
  String
  input text (10-20 Ziffern, Pflicht)
E-Mailadresse
  eCH-0185:emailAddress
  String
  input email (Pflicht)</bpmn:documentation>
      <bpmn:incoming>SequenceFlow_1pmjdyn</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1hy3e56</bpmn:outgoing>
    </bpmn:userTask>
    <bpmn:userTask id="UmzugsdatenErfassen" name="Umzugsdaten erfassen" camunda:formKey="embedded:app:forms/UmzugsdatenErfassenForm.html" camunda:assignee="${meldePflichtiger}">
      <bpmn:documentation>Wegzugsdatum
  eCH-0194:departureDate
  Date
  input text (ISO-DateTime-Format, Pflicht)
  Auswahl des Datums über Bootstrap-Datepicker ermöglichen
Zuzugsdatum
  eCH-0194:arrivalDate
  Date
  input text (ISO-DateTime-Format, Optional)
  Auswahl des Datums über Bootstrap-Datepicker ermöglichen; Das Zuzugsdatum soll nur auswählbar sein, wenn der Benutzer eine Checkbox "Abweichendes Zuzugsdatum" anhakt</bpmn:documentation>
      <bpmn:incoming>SequenceFlow_1j0inpb</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_04fd0dv</bpmn:outgoing>
    </bpmn:userTask>
  </bpmn:process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="Collaboration_1p945p5">
      <bpmndi:BPMNShape id="Participant_0wtqtyr_di" bpmnElement="WeitereAngabenErfassenParticipant">
        <dc:Bounds x="2" y="-7" width="1718" height="274" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="ZuzugsInformationenErfolgreichGeprueft">
        <dc:Bounds x="77" y="103" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="50" y="146" width="90" height="40" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_1j0inpb_di" bpmnElement="SequenceFlow_1j0inpb">
        <di:waypoint x="113" y="121" />
        <di:waypoint x="153" y="121" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_0gaq5kd_di" bpmnElement="SequenceFlow_0gaq5kd">
        <di:waypoint x="396" y="121" />
        <di:waypoint x="426" y="121" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_04fd0dv_di" bpmnElement="SequenceFlow_04fd0dv">
        <di:waypoint x="253" y="121" />
        <di:waypoint x="296" y="121" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="EndEvent_17eotjq_di" bpmnElement="WeitereAngabenErfolgreichErfasst">
        <dc:Bounds x="1637" y="102" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1611" y="145" width="89" height="27" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_1hy3e56_di" bpmnElement="SequenceFlow_1hy3e56">
        <di:waypoint x="1594" y="120" />
        <di:waypoint x="1637" y="120" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="Participant_02v5zqt_di" bpmnElement="VeKaCenterAuskunftsdienstParticipant" bioc:stroke="#43A047" bioc:fill="#C8E6C9">
        <dc:Bounds x="865" y="330" width="300" height="60" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="MessageFlow_0gi7zs3_di" bpmnElement="VersichertenDaten" bioc:stroke="#43A047" bioc:fill="#C8E6C9">
        <di:waypoint x="1000" y="156" />
        <di:waypoint x="1000" y="330" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="913" y="285" width="65" height="40" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="MessageFlow_0yggjzl_di" bpmnElement="Pruefergebnis" bioc:stroke="#43A047" bioc:fill="#C8E6C9">
        <di:waypoint x="1039" y="330" />
        <di:waypoint x="1039" y="156" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1055" y="290" width="63" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_13c4q3d_di" bpmnElement="SequenceFlow_13c4q3d">
        <di:waypoint x="832" y="116" />
        <di:waypoint x="864" y="116" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1pfbest_di" bpmnElement="SequenceFlow_1pfbest">
        <di:waypoint x="1065" y="116" />
        <di:waypoint x="1098" y="116" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="ExclusiveGateway_0hkwozz_di" bpmnElement="ExclusiveGateway_0hkwozz" isMarkerVisible="true">
        <dc:Bounds x="864" y="91" width="50" height="50" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="869" y="149" width="39" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_1dmzowa_di" bpmnElement="PruefenJa">
        <di:waypoint x="914" y="116" />
        <di:waypoint x="965" y="116" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="934" y="96" width="8" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="ExclusiveGateway_1k9fmii_di" bpmnElement="ExclusiveGateway_1k9fmii" isMarkerVisible="true">
        <dc:Bounds x="1201" y="91" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_0s8ozoi_di" bpmnElement="PruefenNein">
        <di:waypoint x="889" y="91" />
        <di:waypoint x="889" y="48" />
        <di:waypoint x="1226" y="48" />
        <di:waypoint x="1226" y="91" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="897" y="68" width="21" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="ExclusiveGateway_0u7sxyf_di" bpmnElement="ExclusiveGateway_0u7sxyf" isMarkerVisible="true">
        <dc:Bounds x="657" y="91" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_14qf1vf_di" bpmnElement="SequenceFlow_14qf1vf">
        <di:waypoint x="707" y="116" />
        <di:waypoint x="732" y="116" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="ExclusiveGateway_0vwu5q9_di" bpmnElement="ExclusiveGateway_0vwu5q9" isMarkerVisible="true">
        <dc:Bounds x="1098" y="91" width="50" height="50" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1088" y="67" width="69" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_0unz7dw_di" bpmnElement="SequenceFlow_0unz7dw">
        <di:waypoint x="1148" y="116" />
        <di:waypoint x="1201" y="116" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1151" y="98" width="32" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_104azdr_di" bpmnElement="SequenceFlow_104azdr">
        <di:waypoint x="1123" y="141" />
        <di:waypoint x="1123" y="186" />
        <di:waypoint x="682" y="186" />
        <di:waypoint x="682" y="141" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1131" y="146" width="36" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="ExclusiveGateway_0nvmazi_di" bpmnElement="ExclusiveGateway_0nvmazi" isMarkerVisible="true">
        <dc:Bounds x="426" y="96" width="50" height="50" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="422" y="77" width="60" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_01vc064_di" bpmnElement="WegzugZuzug">
        <di:waypoint x="476" y="121" />
        <di:waypoint x="549" y="121" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="489" y="87" width="44" height="40" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="ExclusiveGateway_0hwy0a5_di" bpmnElement="ExclusiveGateway_0hwy0a5" isMarkerVisible="true">
        <dc:Bounds x="1414" y="95" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_1pmjdyn_di" bpmnElement="SequenceFlow_1pmjdyn">
        <di:waypoint x="1464" y="120" />
        <di:waypoint x="1494" y="120" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1d2i1uk_di" bpmnElement="Umzug">
        <di:waypoint x="451" y="146" />
        <di:waypoint x="451" y="245" />
        <di:waypoint x="1439" y="245" />
        <di:waypoint x="1439" y="145" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="458" y="150" width="35" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="SubProcess_0x2bvq1_di" bpmnElement="GrundversicherungFuerAllePersonenPruefen" isExpanded="true">
        <dc:Bounds x="549" y="13" width="812" height="213" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="StartEvent_06k91p1_di" bpmnElement="GrundversicherungPruefenStartEvent">
        <dc:Bounds x="577" y="98" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_0pt3tuk_di" bpmnElement="SequenceFlow_0pt3tuk">
        <di:waypoint x="613" y="116" />
        <di:waypoint x="657" y="116" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="EndEvent_13l92vz_di" bpmnElement="EndEvent_13l92vz">
        <dc:Bounds x="1304" y="98" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_1r2heig_di" bpmnElement="SequenceFlow_1r2heig">
        <di:waypoint x="1251" y="116" />
        <di:waypoint x="1304" y="116" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_0431ehk_di" bpmnElement="SequenceFlow_0431ehk">
        <di:waypoint x="1361" y="120" />
        <di:waypoint x="1414" y="120" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="UserTask_1eho7qp_di" bpmnElement="WohnverhaeltnisErfassen" bioc:stroke="#43A047" bioc:fill="#C8E6C9">
        <dc:Bounds x="296" y="81" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="UserTask_13fd62b_di" bpmnElement="KontaktangabenErfassen" bioc:stroke="#43A047" bioc:fill="#C8E6C9">
        <dc:Bounds x="1494" y="80" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="UserTask_1d0fhcm_di" bpmnElement="VersicherungsKartennummernErfassen" bioc:stroke="#E53935" bioc:fill="#FFCDD2">
        <dc:Bounds x="732" y="76" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="UserTask_0715tsx_di" bpmnElement="UmzugsdatenErfassen" bioc:stroke="#43A047" bioc:fill="#C8E6C9">
        <dc:Bounds x="153" y="81" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_1tg1wkf_di" bpmnElement="GrundversicherungPruefen" bioc:stroke="#43A047" bioc:fill="#C8E6C9">
        <dc:Bounds x="965" y="76" width="100" height="80" />
      </bpmndi:BPMNShape>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn:definitions>
